--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_apcli.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_apcli.c
@@ -2721,7 +2721,9 @@
 		}
 	}
 	pRxInfo->MyBss = 1;
+#ifdef APCLI_SUPPORT
 	rx_get_pn(pRxBlk,pRxInfo);
+#endif /* APCLI_SUPPORT */
 #ifdef HDR_TRANS_SUPPORT
 	if (pRxBlk->bHdrRxTrans)
 		Indicate_Legacy_Packet_Hdr_Trns(pAd, pRxBlk, FromWhichBSSID);
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_assoc.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_assoc.c
@@ -1341,7 +1341,7 @@
 			pFtIe = (PFT_FTIE)(ftie_ptr + 2);
 			NdisMoveMemory(pFtIe->MIC, ft_mic, FT_MIC_LEN);
 
-			/* Only first allow install from assoc, later or rekey or instal from auth (backward compatability with not patched clients) */
+			/* Only first allow install from assoc, later or rekey or install from auth (backward compatability with not patched clients) */
 			if (pEntry->AllowInsPTK == TRUE) {
 			    WPAInstallPairwiseKey(pAd, pEntry->apidx, pEntry, TRUE);
 			    pEntry->AllowInsPTK = FALSE;
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_cfg.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_cfg.c
@@ -4388,7 +4388,7 @@
     INT	Status = NDIS_STATUS_SUCCESS, i;
     POS_COOKIE pObj = (POS_COOKIE) pAd->OS_Cookie;
     STRING	driverVersion[16];
-	struct wifi_dev *wdev;
+	struct wifi_dev *wdev __maybe_unused;
 #if defined(DBG) || defined(WSC_AP_SUPPORT) || defined(BB_SOC) || defined(LLTD_SUPPORT)
 	UCHAR	apidx = pObj->ioctl_if;
 #endif
 #ifdef WSC_AP_SUPPORT
 	UINT WscPinCode = 0;
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_data.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_data.c
@@ -4534,7 +4534,7 @@
 	}
 }
 
-
+#ifdef APCLI_SUPPORT
 void rx_get_pn(RX_BLK *pRxBlk,RXINFO_STRUC *pRxInfo)
 {
 
@@ -4621,7 +4621,7 @@
 
 	return isAllow;
 }
-
+#endif /* APCLI_SUPPORT */
 
 VOID APRxDataFrameAnnounce(
 	IN RTMP_ADAPTER *pAd,
@@ -5519,10 +5519,10 @@
 		pRxInfo->Decrypted = 1;
 	}
 #endif /* SOFT_ENCRYPT */
-
-		/*unicast frame for apcli get pn.*/
+#ifdef APCLI_SUPPORT
+	/*unicast frame for apcli get pn.*/
 	rx_get_pn(pRxBlk,pRxInfo);
-
+#endif /* APCLI_SUPPORT */
 	if (!((pHeader->Frag == 0) && (pFmeCtrl->MoreFrag == 0)))
 	{
 		/*
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/chips/mt76x2.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/chips/mt76x2.c
@@ -1826,9 +1826,11 @@
 	RTMP_IO_READ32(ad, TX_ALC_CFG_4, &value);
 	value &= ~WL_LOWGAIN_CH_EN;
 	RTMP_IO_WRITE32(ad, TX_ALC_CFG_4, value);
+#ifdef APCLI_SUPPORT
 	RTMP_IO_READ32(ad, PN_PAD_MODE, &value);
 	value |= PN_PAD_MODE_OFFSET;
 	RTMP_IO_WRITE32(ad, PN_PAD_MODE, value);
+#endif /* APCLI_SUPPORT */
 	/*
  	 * Check crystal trim2 first 
  	 */ 
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/chips/rt6352.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/chips/rt6352.c
@@ -693,8 +693,9 @@
 {
 	UINT32 IdReg;
 	UINT32 Value = 0;
+#ifdef APCLI_SUPPORT
 	UINT32 pn_mode_value = 0;
-
+#endif /* APCLI_SUPPORT */
 #ifdef DESC_32B_SUPPORT
 	WPDMA_GLO_CFG_STRUC	GloCfg;
 #endif /* DESC_32B_SUPPORT */
@@ -729,7 +730,7 @@
 	RTMP_IO_READ32(pAd, TX_ALG_CFG_1, &Value);
 	Value = Value & (~0x80000000);
 	RTMP_IO_WRITE32(pAd, TX_ALG_CFG_1, Value);
-
+#ifdef APCLI_SUPPORT
 	/*
 	*bit 0 :  R/W PN_PAD_MODE Padding IV/EIV in RX MPDU when packet is decrypted
 	*0 : Disable                             1: Enable
@@ -737,7 +738,7 @@
 	RTMP_IO_READ32(pAd, PN_PAD_MODE, &pn_mode_value);
 	pn_mode_value |= PN_PAD_MODE_OFFSET;
 	RTMP_IO_WRITE32(pAd, PN_PAD_MODE, pn_mode_value);
-
+#endif /* APCLI_SUPPORT */
 #ifdef DESC_32B_SUPPORT
 	RTMP_IO_READ32(pAd, WPDMA_GLO_CFG , &GloCfg.word);
 	GloCfg.field.Desc32BEn =1;
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/common/cmm_data.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/common/cmm_data.c
@@ -2816,12 +2816,13 @@
 	IN	RX_BLK			*pRxBlk,
 	IN	UCHAR			FromWhichBSSID)
 {
+#ifdef APCLI_SUPPORT
 	if (check_rx_pkt_pn_allowed(pAd, pRxBlk) == FALSE) {
 		DBGPRINT(RT_DEBUG_WARN, ("%s:drop packet by PN mismatch!\n", __func__));
 		RELEASE_NDIS_PACKET(pAd, pRxBlk->pRxPacket, NDIS_STATUS_FAILURE);
 		return;
 	}
-
+#endif /* APCLI_SUPPORT */
 	RTMP_UPDATE_OS_PACKET_INFO(pAd, pRxBlk, FromWhichBSSID);
 	RTMP_SET_PACKET_IF(pRxBlk->pRxPacket, FromWhichBSSID);
 	deaggregate_AMSDU_announce(pAd, pRxBlk, pRxBlk->pRxPacket, pRxBlk->pData, pRxBlk->DataSize, pRxBlk->OpMode);
@@ -3554,11 +3555,13 @@
 	UCHAR Header802_3[LENGTH_802_3];
 	USHORT VLAN_VID = 0, VLAN_Priority = 0;
 
+#ifdef APCLI_SUPPORT
 	if (check_rx_pkt_pn_allowed(pAd, pRxBlk) == FALSE) {
 		DBGPRINT(RT_DEBUG_WARN, ("%s:drop packet by PN mismatch!\n", __func__));
 		RELEASE_NDIS_PACKET(pAd, pRxPacket, NDIS_STATUS_FAILURE);
 		return;
 	}
+#endif /* APCLI_SUPPORT */
 
 	/*
 		1. get 802.3 Header
@@ -4091,11 +4094,13 @@
 		RELEASE_NDIS_PACKET(pAd, pRxBlk->pRxPacket, NDIS_STATUS_FAILURE);
 		return;
 	}
+#ifdef APCLI_SUPPORT
 	if (check_rx_pkt_pn_allowed(pAd, pRxBlk) == FALSE) {
 		DBGPRINT(RT_DEBUG_WARN, ("%s:drop packet by PN mismatch!\n", __func__));
 		RELEASE_NDIS_PACKET(pAd, pRxBlk->pRxPacket, NDIS_STATUS_FAILURE);
 		return;
 	}	
+#endif /* APCLI_SUPPORT */
 #ifdef CONFIG_AP_SUPPORT
 	IF_DEV_CONFIG_OPMODE_ON_AP(pAd)
 	{		
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/include/rtmp.h
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/include/rtmp.h
@@ -11120,6 +11120,8 @@
 BOOLEAN Monitor_Close(RTMP_ADAPTER *pAd, PNET_DEV dev_p);
 #endif /* CONFIG_SNIFFER_SUPPORT */
 int gen_radiotap_header(RTMP_ADAPTER *pAd,RX_BLK *pRxBlk);
+#ifdef APCLI_SUPPORT
 BOOLEAN check_rx_pkt_pn_allowed(RTMP_ADAPTER *pAd, RX_BLK *rx_blk); 
 void rx_get_pn(RX_BLK *pRxBlk,RXINFO_STRUC *pRxInfo);
+#endif /* APCLI_SUPPORT */


 #endif  /* __RTMP_H__ */
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/4.1.X.X/mt76x3/ap/ap_assoc.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/4.1.X.X/mt76x3/ap/ap_assoc.c
@@ -1744,9 +1744,12 @@
 			pFtIe = (PFT_FTIE)(ftie_ptr + 2);
 			NdisMoveMemory(pFtIe->MIC, ft_mic, FT_MIC_LEN);
 
-			/* Only first allow install from assoc, later or rekey or instal from auth (backward compatability with not patched clients) */
-			if(pEntry->AllowInsPTK == TRUE || !IS_FT_STA(pEntry) || (IS_FT_STA(pEntry) && (NdisEqualMemory(&pEntry->PTK[OFFSET_OF_PTK_TK], zeroFT, LEN_TK) || !NdisEqualMemory(&pEntry->PTK[OFFSET_OF_PTK_TK], pEntry->LastTK, LEN_TK))))
-			{
+			/* Only first allow install from assoc, later or rekey or install from auth (backward compatability with not patched clients) */
+			if(pEntry->AllowInsPTK == TRUE
+#ifdef DOT11R_FT_SUPPORT
+			    || !IS_FT_STA(pEntry) || (IS_FT_STA(pEntry) && (NdisEqualMemory(&pEntry->PTK[OFFSET_OF_PTK_TK], zeroFT, LEN_TK) || !NdisEqualMemory(&pEntry->PTK[OFFSET_OF_PTK_TK], pEntry->LastTK, LEN_TK)))
+#endif
+			) {
 			    WPAInstallPairwiseKey(pAd, pEntry->func_tb_idx, pEntry, TRUE);
 			    NdisMoveMemory(pEntry->LastTK, &pEntry->PTK[OFFSET_OF_PTK_TK], LEN_TK);
 			    pEntry->AllowInsPTK = FALSE;
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/4.1.X.X/mt76x3/tx_rx/wdev_rx.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/4.1.X.X/mt76x3/tx_rx/wdev_rx.c
@@ -126,6 +126,7 @@
 	}
 }
 
+#ifdef APCLI_SUPPORT
 /* this function ONLY if not allow pn replay attack and drop packet */
 static BOOLEAN check_rx_pkt_pn_allowed(RTMP_ADAPTER *pAd, RX_BLK *rx_blk)
 {
@@ -184,6 +185,7 @@
 
 	return isAllow;
 }
+#endif /* APCLI_SUPPORT */
 
 #ifdef DOT11_N_SUPPORT
 UINT deaggregate_AMSDU_announce(
@@ -302,13 +304,14 @@
 
 VOID Indicate_AMSDU_Packet(RTMP_ADAPTER *pAd, RX_BLK *pRxBlk, UCHAR wdev_idx)
 {
-	//UINT nMSDU;
-
+
+#ifdef APCLI_SUPPORT
 	if (check_rx_pkt_pn_allowed(pAd, pRxBlk) == FALSE) {
 		DBGPRINT(RT_DEBUG_WARN, ("%s:drop packet by PN mismatch!\n", __FUNCTION__));
 		RELEASE_NDIS_PACKET(pAd, pRxBlk->pRxPacket, NDIS_STATUS_FAILURE);
 		return;
 	}
+#endif /* APCLI_SUPPORT */
 
 	RTMP_UPDATE_OS_PACKET_INFO(pAd, pRxBlk, wdev_idx);
 	RTMP_SET_PACKET_WDEV(pRxBlk->pRxPacket, wdev_idx);
@@ -376,11 +379,13 @@
 	}
 	wdev = pAd->wdev_list[wdev_idx];
 
+#ifdef APCLI_SUPPORT
 	if (check_rx_pkt_pn_allowed(pAd, pRxBlk) == FALSE) {
 		DBGPRINT(RT_DEBUG_WARN, ("%s:drop packet by PN mismatch!\n", __FUNCTION__));
 		RELEASE_NDIS_PACKET(pAd, pRxPacket, NDIS_STATUS_FAILURE);
 		return;
 	}
+#endif /* APCLI_SUPPORT */
 
 //+++Add by shiang for debug
 #ifdef HDR_TRANS_SUPPORT
@@ -968,11 +973,13 @@
 		return;
 	}
 
+#ifdef APCLI_SUPPORT
 	if (check_rx_pkt_pn_allowed(pAd, pRxBlk) == FALSE) {
 		DBGPRINT(RT_DEBUG_WARN, ("%s:drop packet by PN mismatch!\n", __FUNCTION__));
 		RELEASE_NDIS_PACKET(pAd, pRxBlk->pRxPacket, NDIS_STATUS_FAILURE);
 		return;
 	}
+#endif /* APCLI_SUPPORT */
 
 	pEntry = &pAd->MacTab.Content[pRxBlk->wcid];
 	if (pEntry == NULL)
