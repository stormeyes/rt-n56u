--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_assoc.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/ap/ap_assoc.c
@@ -809,7 +809,7 @@
 #endif /* DOT1X_SUPPORT */	
 #ifdef DOT11R_FT_SUPPORT
 	PFT_CFG pFtCfg = NULL;
-	FT_INFO FtInfoBuf;
+	PFT_INFO pFtInfoBuf = NULL;             /*Wframe-larger-than=1024 warning  removal*/
 #endif /* DOT11R_FT_SUPPORT */
 	struct wifi_dev *wdev;
 	MULTISSID_STRUCT *pMbss;
@@ -845,9 +845,23 @@
 		return;
 	}
 
+#ifdef DOT11R_FT_SUPPORT
+	os_alloc_mem(NULL, (UCHAR **)&pFtInfoBuf, sizeof(FT_INFO));
+	if (pFtInfoBuf == NULL) {
+		DBGPRINT(RT_DEBUG_ERROR, 
+					("%s(): pFtInfoBuf mem alloc failed\n", __FUNCTION__));
+		return;
+	}
+	NdisZeroMemory(pFtInfoBuf, sizeof(FT_INFO));
+#endif /* DOT11R_FT_SUPPORT */
+
 	/* allocate memory */
 	os_alloc_mem(NULL, (UCHAR **)&ie_list, sizeof(IE_LISTS));
 	if (ie_list == NULL) {
+#ifdef DOT11R_FT_SUPPORT
+		if (pFtInfoBuf != NULL)
+			os_free_mem(NULL, pFtInfoBuf);
+#endif /* DOT11R_FT_SUPPORT */
 		DBGPRINT(RT_DEBUG_ERROR, ("%s(): mem alloc failed\n", __FUNCTION__));
 		return;
 	}
@@ -1060,7 +1074,7 @@
 		if ((pFtCfg->FtCapFlag.Dot11rFtEnable)
 			&& (StatusCode == MLME_SUCCESS))
 			StatusCode = FT_AssocReqHandler(pAd, isReassoc, pFtCfg, pEntry,
-							&ie_list->FtInfo, &FtInfoBuf);
+							&ie_list->FtInfo, pFtInfoBuf);
 
 		/* just silencely discard this frame */
 		if (StatusCode == 0xFFFF)
@@ -1276,11 +1290,11 @@
 		UINT8   ricie_len = 0;
 				
 		/* Insert RSNIE if necessary */
-		if (FtInfoBuf.RSNIE_Len != 0)
+		if (pFtInfoBuf->RSNIE_Len != 0)
 		{ 
 	        ULONG TmpLen;
 	        MakeOutgoingFrame(pOutBuffer+FrameLen,      &TmpLen, 
-							  FtInfoBuf.RSNIE_Len,		FtInfoBuf.RSN_IE,
+							  pFtInfoBuf->RSNIE_Len,		pFtInfoBuf->RSN_IE,
 	                          END_OF_ARGS);
 	        FrameLen += TmpLen;
 	    }	
@@ -1289,34 +1303,34 @@
 		mdie_ptr = pOutBuffer+FrameLen;
 		mdie_len = 5;
 		FT_InsertMdIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-				FtInfoBuf.MdIeInfo.MdId, FtInfoBuf.MdIeInfo.FtCapPlc);
+				pFtInfoBuf->MdIeInfo.MdId, pFtInfoBuf->MdIeInfo.FtCapPlc);
 
 		/* Insert FTIE. */
-		if (FtInfoBuf.FtIeInfo.Len != 0)
+		if (pFtInfoBuf->FtIeInfo.Len != 0)
 		{
 			ftie_ptr = pOutBuffer+FrameLen;
-			ftie_len = (2 + FtInfoBuf.FtIeInfo.Len);
+			ftie_len = (2 + pFtInfoBuf->FtIeInfo.Len);
 			FT_InsertFTIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-				FtInfoBuf.FtIeInfo.Len, FtInfoBuf.FtIeInfo.MICCtr,
-				FtInfoBuf.FtIeInfo.MIC, FtInfoBuf.FtIeInfo.ANonce,
-				FtInfoBuf.FtIeInfo.SNonce);
+				pFtInfoBuf->FtIeInfo.Len, pFtInfoBuf->FtIeInfo.MICCtr,
+				pFtInfoBuf->FtIeInfo.MIC, pFtInfoBuf->FtIeInfo.ANonce,
+				pFtInfoBuf->FtIeInfo.SNonce);
 		}
 		/* Insert R1KH IE into FTIE. */
-		if (FtInfoBuf.FtIeInfo.R1khIdLen!= 0)
+		if (pFtInfoBuf->FtIeInfo.R1khIdLen!= 0)
 			FT_FTIE_InsertKhIdSubIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-					FT_R1KH_ID, FtInfoBuf.FtIeInfo.R1khId,
-					FtInfoBuf.FtIeInfo.R1khIdLen);
+					FT_R1KH_ID, pFtInfoBuf->FtIeInfo.R1khId,
+					pFtInfoBuf->FtIeInfo.R1khIdLen);
 
 		/* Insert GTK Key info into FTIE. */
-		if (FtInfoBuf.FtIeInfo.GtkLen!= 0)
+		if (pFtInfoBuf->FtIeInfo.GtkLen!= 0)
 	 		FT_FTIE_InsertGTKSubIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-	 			FtInfoBuf.FtIeInfo.GtkSubIE, FtInfoBuf.FtIeInfo.GtkLen);
+	 			pFtInfoBuf->FtIeInfo.GtkSubIE, pFtInfoBuf->FtIeInfo.GtkLen);
 
 		/* Insert R0KH IE into FTIE. */
-		if (FtInfoBuf.FtIeInfo.R0khIdLen!= 0)
+		if (pFtInfoBuf->FtIeInfo.R0khIdLen!= 0)
 			FT_FTIE_InsertKhIdSubIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-					FT_R0KH_ID, FtInfoBuf.FtIeInfo.R0khId,
-					FtInfoBuf.FtIeInfo.R0khIdLen);
+					FT_R0KH_ID, pFtInfoBuf->FtIeInfo.R0khId,
+					pFtInfoBuf->FtIeInfo.R0khIdLen);
 
 		/* Insert RIC. */
 		if (ie_list->FtInfo.RicInfo.Len)
@@ -1334,7 +1348,7 @@
 		}
 
 		/* Calculate the FT MIC for FT procedure */
-		if (FtInfoBuf.FtIeInfo.MICCtr.field.IECnt)
+		if (pFtInfoBuf->FtIeInfo.MICCtr.field.IECnt)
 		{
 			UINT8	ft_mic[FT_MIC_LEN];
 			PFT_FTIE	pFtIe;
@@ -1343,8 +1357,8 @@
 							wdev->bssid, 
 							pEntry->PTK, 
 							6, 
-							FtInfoBuf.RSN_IE, 
-							FtInfoBuf.RSNIE_Len, 
+							pFtInfoBuf->RSN_IE, 
+							pFtInfoBuf->RSNIE_Len, 
 							mdie_ptr, 
 							mdie_len, 
 							ftie_ptr, 
@@ -2122,7 +2136,12 @@
 	if (ie_list != NULL)
 		os_free_mem(NULL, ie_list);
 
-	return;	
+#ifdef DOT11R_FT_SUPPORT
+	if (pFtInfoBuf != NULL)
+		os_free_mem(NULL, pFtInfoBuf);
+#endif /* DOT11R_FT_SUPPORT */
+
+	return;
 }
 
 
--- rt-n56u/trunk/proprietary/rt_wifi/rtpci/4.1.X.X/mt76x3/ap/ap_assoc.c
+++ rt-n56u/trunk/proprietary/rt_wifi/rtpci/4.1.X.X/mt76x3/ap/ap_assoc.c
@@ -1198,7 +1198,7 @@
 #endif /* DOT1X_SUPPORT */
 #ifdef DOT11R_FT_SUPPORT
 	PFT_CFG pFtCfg = NULL;
-	FT_INFO FtInfoBuf;
+	PFT_INFO pFtInfoBuf = NULL;             /*Wframe-larger-than=1024 warning  removal*/
 #endif /* DOT11R_FT_SUPPORT */
 #ifdef WSC_AP_SUPPORT
 	WSC_CTRL *wsc_ctrl;
@@ -1227,9 +1227,23 @@
 		return;
 	}
 		
+#ifdef DOT11R_FT_SUPPORT
+	os_alloc_mem(NULL, (UCHAR **)&pFtInfoBuf, sizeof(FT_INFO));
+	if (pFtInfoBuf == NULL) {
+		DBGPRINT(RT_DEBUG_ERROR, 
+					("%s(): pFtInfoBuf mem alloc failed\n", __FUNCTION__));
+		return;
+	}
+	NdisZeroMemory(pFtInfoBuf, sizeof(FT_INFO));
+#endif /* DOT11R_FT_SUPPORT */
+
 	/* allocate memory */
 	os_alloc_mem(NULL, (UCHAR **)&ie_list, sizeof(IE_LISTS));
 	if (ie_list == NULL) {
+#ifdef DOT11R_FT_SUPPORT
+		if (pFtInfoBuf != NULL)
+			os_free_mem(NULL, pFtInfoBuf);
+#endif /* DOT11R_FT_SUPPORT */
 		DBGPRINT(RT_DEBUG_ERROR, ("%s(): mem alloc failed\n", __FUNCTION__));
 		return;
 	}
@@ -1459,7 +1473,7 @@
 		if ((pFtCfg->FtCapFlag.Dot11rFtEnable)
 			&& (StatusCode == MLME_SUCCESS))
 			StatusCode = FT_AssocReqHandler(pAd, isReassoc, pFtCfg, pEntry,
-							&ie_list->FtInfo, &FtInfoBuf);
+							&ie_list->FtInfo, pFtInfoBuf);
 
 		/* just silencely discard this frame */
 		if (StatusCode == 0xFFFF)
@@ -1671,11 +1685,11 @@
 		UINT8   ricie_len = 0;
 				
 		/* Insert RSNIE if necessary */
-		if (FtInfoBuf.RSNIE_Len != 0)
+		if (pFtInfoBuf->RSNIE_Len != 0)
 		{ 
 	        ULONG TmpLen;
 	        MakeOutgoingFrame(pOutBuffer+FrameLen,      &TmpLen, 
-							  FtInfoBuf.RSNIE_Len,		FtInfoBuf.RSN_IE,
+							  pFtInfoBuf->RSNIE_Len,		pFtInfoBuf->RSN_IE,
 	                          END_OF_ARGS);
 	        FrameLen += TmpLen;
 	    }	
@@ -1684,34 +1698,34 @@
 		mdie_ptr = pOutBuffer+FrameLen;
 		mdie_len = 5;
 		FT_InsertMdIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-				FtInfoBuf.MdIeInfo.MdId, FtInfoBuf.MdIeInfo.FtCapPlc);
+				pFtInfoBuf->MdIeInfo.MdId, pFtInfoBuf->MdIeInfo.FtCapPlc);
 
 		/* Insert FTIE. */
-		if (FtInfoBuf.FtIeInfo.Len != 0)
+		if (pFtInfoBuf->FtIeInfo.Len != 0)
 		{
 			ftie_ptr = pOutBuffer+FrameLen;
-			ftie_len = (2 + FtInfoBuf.FtIeInfo.Len);
+			ftie_len = (2 + pFtInfoBuf->FtIeInfo.Len);
 			FT_InsertFTIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-				FtInfoBuf.FtIeInfo.Len, FtInfoBuf.FtIeInfo.MICCtr,
-				FtInfoBuf.FtIeInfo.MIC, FtInfoBuf.FtIeInfo.ANonce,
-				FtInfoBuf.FtIeInfo.SNonce);
+				pFtInfoBuf->FtIeInfo.Len, pFtInfoBuf->FtIeInfo.MICCtr,
+				pFtInfoBuf->FtIeInfo.MIC, pFtInfoBuf->FtIeInfo.ANonce,
+				pFtInfoBuf->FtIeInfo.SNonce);
 		}
 		/* Insert R1KH IE into FTIE. */
-		if (FtInfoBuf.FtIeInfo.R1khIdLen!= 0)
+		if (pFtInfoBuf->FtIeInfo.R1khIdLen!= 0)
 			FT_FTIE_InsertKhIdSubIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-					FT_R1KH_ID, FtInfoBuf.FtIeInfo.R1khId,
-					FtInfoBuf.FtIeInfo.R1khIdLen);
+					FT_R1KH_ID, pFtInfoBuf->FtIeInfo.R1khId,
+					pFtInfoBuf->FtIeInfo.R1khIdLen);
 
 		/* Insert GTK Key info into FTIE. */
-		if (FtInfoBuf.FtIeInfo.GtkLen!= 0)
+		if (pFtInfoBuf->FtIeInfo.GtkLen!= 0)
 	 		FT_FTIE_InsertGTKSubIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-	 			FtInfoBuf.FtIeInfo.GtkSubIE, FtInfoBuf.FtIeInfo.GtkLen);
+	 			pFtInfoBuf->FtIeInfo.GtkSubIE, pFtInfoBuf->FtIeInfo.GtkLen);
 
 		/* Insert R0KH IE into FTIE. */
-		if (FtInfoBuf.FtIeInfo.R0khIdLen!= 0)
+		if (pFtInfoBuf->FtIeInfo.R0khIdLen!= 0)
 			FT_FTIE_InsertKhIdSubIE(pAd, pOutBuffer+FrameLen, &FrameLen,
-					FT_R0KH_ID, FtInfoBuf.FtIeInfo.R0khId,
-					FtInfoBuf.FtIeInfo.R0khIdLen);
+					FT_R0KH_ID, pFtInfoBuf->FtIeInfo.R0khId,
+					pFtInfoBuf->FtIeInfo.R0khIdLen);
 
 		/* Insert RIC. */
 		if (ie_list->FtInfo.RicInfo.Len)
@@ -1729,7 +1743,7 @@
 		}
 
 		/* Calculate the FT MIC for FT procedure */
-		if (FtInfoBuf.FtIeInfo.MICCtr.field.IECnt)
+		if (pFtInfoBuf->FtIeInfo.MICCtr.field.IECnt)
 		{
 			UINT8	ft_mic[FT_MIC_LEN];
 			PFT_FTIE	pFtIe;
@@ -1738,8 +1752,8 @@
 							wdev->bssid, 
 							pEntry->PTK, 
 							6, 
-							FtInfoBuf.RSN_IE, 
-							FtInfoBuf.RSNIE_Len, 
+							pFtInfoBuf->RSN_IE, 
+							pFtInfoBuf->RSNIE_Len, 
 							mdie_ptr, 
 							mdie_len, 
 							ftie_ptr, 
@@ -2401,7 +2415,12 @@
 	if (ie_list != NULL)
 		os_free_mem(NULL, ie_list);
 
-	return;	
+#ifdef DOT11R_FT_SUPPORT
+	if (pFtInfoBuf != NULL)
+		os_free_mem(NULL, pFtInfoBuf);
+#endif /* DOT11R_FT_SUPPORT */
+
+	return;
 }
 
 
